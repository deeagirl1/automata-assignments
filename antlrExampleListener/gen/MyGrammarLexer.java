// Generated from MyGrammar.g4 by ANTLR 4.10.1
package gen;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MyGrammarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.10.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		MUL=1, DIV=2, ADD=3, SUB=4, POW=5, FACT=6, PARANL=7, PARANR=8, EQUAL=9, 
		EQ=10, NEQ=11, LTEQ=12, GTEQ=13, LT=14, GT=15, NOT=16, AND=17, OR=18, 
		OPEN_CURLY_BRACKET=19, CLOSE_CURLY_BRACKET=20, IF=21, ELSE=22, WHILE=23, 
		FOR=24, SEMICOLON=25, PRINT=26, IDENTIFIER=27, INT=28, BOOL=29, STRING=30, 
		COMMENT=31, WS=32;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"MUL", "DIV", "ADD", "SUB", "POW", "FACT", "PARANL", "PARANR", "EQUAL", 
			"EQ", "NEQ", "LTEQ", "GTEQ", "LT", "GT", "NOT", "AND", "OR", "OPEN_CURLY_BRACKET", 
			"CLOSE_CURLY_BRACKET", "IF", "ELSE", "WHILE", "FOR", "SEMICOLON", "PRINT", 
			"IDENTIFIER", "INT", "BOOL", "STRING", "COMMENT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'*'", "'/'", "'+'", "'-'", "'^'", "'!'", "'('", "')'", "'='", 
			"'=='", "'!='", "'<='", "'>='", "'<'", "'>'", "'not'", "'&&'", "'||'", 
			"'{'", "'}'", "'if'", "'else'", "'while'", "'for'", "';'", "'print'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "MUL", "DIV", "ADD", "SUB", "POW", "FACT", "PARANL", "PARANR", 
			"EQUAL", "EQ", "NEQ", "LTEQ", "GTEQ", "LT", "GT", "NOT", "AND", "OR", 
			"OPEN_CURLY_BRACKET", "CLOSE_CURLY_BRACKET", "IF", "ELSE", "WHILE", "FOR", 
			"SEMICOLON", "PRINT", "IDENTIFIER", "INT", "BOOL", "STRING", "COMMENT", 
			"WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MyGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "MyGrammar.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000 \u00be\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0001\u0000\u0001\u0000\u0001"+
		"\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001"+
		"\u0007\u0001\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\n\u0001"+
		"\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f"+
		"\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001"+
		"\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001"+
		"\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0005\u001a\u008e\b\u001a\n"+
		"\u001a\f\u001a\u0091\t\u001a\u0001\u001b\u0004\u001b\u0094\b\u001b\u000b"+
		"\u001b\f\u001b\u0095\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0001\u001c\u0003\u001c\u00a1"+
		"\b\u001c\u0001\u001d\u0001\u001d\u0004\u001d\u00a5\b\u001d\u000b\u001d"+
		"\f\u001d\u00a6\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e"+
		"\u0001\u001e\u0004\u001e\u00af\b\u001e\u000b\u001e\f\u001e\u00b0\u0001"+
		"\u001e\u0003\u001e\u00b4\b\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0004"+
		"\u001f\u00b9\b\u001f\u000b\u001f\f\u001f\u00ba\u0001\u001f\u0001\u001f"+
		"\u0001\u00b0\u0000 \u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t"+
		"\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f"+
		"\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014"+
		")\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e"+
		"=\u001f? \u0001\u0000\u0006\u0003\u0000AZ__az\u0006\u0000!!..09AZ__az"+
		"\u0001\u000009\u0001\u0000\"\"\u0001\u0001\n\n\u0003\u0000\t\n\r\r  \u00c3"+
		"\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000"+
		"\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000"+
		"\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000"+
		"\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000"+
		"\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000="+
		"\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0001A\u0001\u0000"+
		"\u0000\u0000\u0003C\u0001\u0000\u0000\u0000\u0005E\u0001\u0000\u0000\u0000"+
		"\u0007G\u0001\u0000\u0000\u0000\tI\u0001\u0000\u0000\u0000\u000bK\u0001"+
		"\u0000\u0000\u0000\rM\u0001\u0000\u0000\u0000\u000fO\u0001\u0000\u0000"+
		"\u0000\u0011Q\u0001\u0000\u0000\u0000\u0013S\u0001\u0000\u0000\u0000\u0015"+
		"V\u0001\u0000\u0000\u0000\u0017Y\u0001\u0000\u0000\u0000\u0019\\\u0001"+
		"\u0000\u0000\u0000\u001b_\u0001\u0000\u0000\u0000\u001da\u0001\u0000\u0000"+
		"\u0000\u001fc\u0001\u0000\u0000\u0000!g\u0001\u0000\u0000\u0000#j\u0001"+
		"\u0000\u0000\u0000%m\u0001\u0000\u0000\u0000\'o\u0001\u0000\u0000\u0000"+
		")q\u0001\u0000\u0000\u0000+t\u0001\u0000\u0000\u0000-y\u0001\u0000\u0000"+
		"\u0000/\u007f\u0001\u0000\u0000\u00001\u0083\u0001\u0000\u0000\u00003"+
		"\u0085\u0001\u0000\u0000\u00005\u008b\u0001\u0000\u0000\u00007\u0093\u0001"+
		"\u0000\u0000\u00009\u00a0\u0001\u0000\u0000\u0000;\u00a2\u0001\u0000\u0000"+
		"\u0000=\u00aa\u0001\u0000\u0000\u0000?\u00b8\u0001\u0000\u0000\u0000A"+
		"B\u0005*\u0000\u0000B\u0002\u0001\u0000\u0000\u0000CD\u0005/\u0000\u0000"+
		"D\u0004\u0001\u0000\u0000\u0000EF\u0005+\u0000\u0000F\u0006\u0001\u0000"+
		"\u0000\u0000GH\u0005-\u0000\u0000H\b\u0001\u0000\u0000\u0000IJ\u0005^"+
		"\u0000\u0000J\n\u0001\u0000\u0000\u0000KL\u0005!\u0000\u0000L\f\u0001"+
		"\u0000\u0000\u0000MN\u0005(\u0000\u0000N\u000e\u0001\u0000\u0000\u0000"+
		"OP\u0005)\u0000\u0000P\u0010\u0001\u0000\u0000\u0000QR\u0005=\u0000\u0000"+
		"R\u0012\u0001\u0000\u0000\u0000ST\u0005=\u0000\u0000TU\u0005=\u0000\u0000"+
		"U\u0014\u0001\u0000\u0000\u0000VW\u0005!\u0000\u0000WX\u0005=\u0000\u0000"+
		"X\u0016\u0001\u0000\u0000\u0000YZ\u0005<\u0000\u0000Z[\u0005=\u0000\u0000"+
		"[\u0018\u0001\u0000\u0000\u0000\\]\u0005>\u0000\u0000]^\u0005=\u0000\u0000"+
		"^\u001a\u0001\u0000\u0000\u0000_`\u0005<\u0000\u0000`\u001c\u0001\u0000"+
		"\u0000\u0000ab\u0005>\u0000\u0000b\u001e\u0001\u0000\u0000\u0000cd\u0005"+
		"n\u0000\u0000de\u0005o\u0000\u0000ef\u0005t\u0000\u0000f \u0001\u0000"+
		"\u0000\u0000gh\u0005&\u0000\u0000hi\u0005&\u0000\u0000i\"\u0001\u0000"+
		"\u0000\u0000jk\u0005|\u0000\u0000kl\u0005|\u0000\u0000l$\u0001\u0000\u0000"+
		"\u0000mn\u0005{\u0000\u0000n&\u0001\u0000\u0000\u0000op\u0005}\u0000\u0000"+
		"p(\u0001\u0000\u0000\u0000qr\u0005i\u0000\u0000rs\u0005f\u0000\u0000s"+
		"*\u0001\u0000\u0000\u0000tu\u0005e\u0000\u0000uv\u0005l\u0000\u0000vw"+
		"\u0005s\u0000\u0000wx\u0005e\u0000\u0000x,\u0001\u0000\u0000\u0000yz\u0005"+
		"w\u0000\u0000z{\u0005h\u0000\u0000{|\u0005i\u0000\u0000|}\u0005l\u0000"+
		"\u0000}~\u0005e\u0000\u0000~.\u0001\u0000\u0000\u0000\u007f\u0080\u0005"+
		"f\u0000\u0000\u0080\u0081\u0005o\u0000\u0000\u0081\u0082\u0005r\u0000"+
		"\u0000\u00820\u0001\u0000\u0000\u0000\u0083\u0084\u0005;\u0000\u0000\u0084"+
		"2\u0001\u0000\u0000\u0000\u0085\u0086\u0005p\u0000\u0000\u0086\u0087\u0005"+
		"r\u0000\u0000\u0087\u0088\u0005i\u0000\u0000\u0088\u0089\u0005n\u0000"+
		"\u0000\u0089\u008a\u0005t\u0000\u0000\u008a4\u0001\u0000\u0000\u0000\u008b"+
		"\u008f\u0007\u0000\u0000\u0000\u008c\u008e\u0007\u0001\u0000\u0000\u008d"+
		"\u008c\u0001\u0000\u0000\u0000\u008e\u0091\u0001\u0000\u0000\u0000\u008f"+
		"\u008d\u0001\u0000\u0000\u0000\u008f\u0090\u0001\u0000\u0000\u0000\u0090"+
		"6\u0001\u0000\u0000\u0000\u0091\u008f\u0001\u0000\u0000\u0000\u0092\u0094"+
		"\u0007\u0002\u0000\u0000\u0093\u0092\u0001\u0000\u0000\u0000\u0094\u0095"+
		"\u0001\u0000\u0000\u0000\u0095\u0093\u0001\u0000\u0000\u0000\u0095\u0096"+
		"\u0001\u0000\u0000\u0000\u00968\u0001\u0000\u0000\u0000\u0097\u0098\u0005"+
		"T\u0000\u0000\u0098\u0099\u0005R\u0000\u0000\u0099\u009a\u0005U\u0000"+
		"\u0000\u009a\u00a1\u0005E\u0000\u0000\u009b\u009c\u0005F\u0000\u0000\u009c"+
		"\u009d\u0005A\u0000\u0000\u009d\u009e\u0005L\u0000\u0000\u009e\u009f\u0005"+
		"S\u0000\u0000\u009f\u00a1\u0005E\u0000\u0000\u00a0\u0097\u0001\u0000\u0000"+
		"\u0000\u00a0\u009b\u0001\u0000\u0000\u0000\u00a1:\u0001\u0000\u0000\u0000"+
		"\u00a2\u00a4\u0005\"\u0000\u0000\u00a3\u00a5\b\u0003\u0000\u0000\u00a4"+
		"\u00a3\u0001\u0000\u0000\u0000\u00a5\u00a6\u0001\u0000\u0000\u0000\u00a6"+
		"\u00a4\u0001\u0000\u0000\u0000\u00a6\u00a7\u0001\u0000\u0000\u0000\u00a7"+
		"\u00a8\u0001\u0000\u0000\u0000\u00a8\u00a9\u0005\"\u0000\u0000\u00a9<"+
		"\u0001\u0000\u0000\u0000\u00aa\u00ab\u0005/\u0000\u0000\u00ab\u00ac\u0005"+
		"/\u0000\u0000\u00ac\u00ae\u0001\u0000\u0000\u0000\u00ad\u00af\t\u0000"+
		"\u0000\u0000\u00ae\u00ad\u0001\u0000\u0000\u0000\u00af\u00b0\u0001\u0000"+
		"\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b0\u00ae\u0001\u0000"+
		"\u0000\u0000\u00b1\u00b3\u0001\u0000\u0000\u0000\u00b2\u00b4\u0007\u0004"+
		"\u0000\u0000\u00b3\u00b2\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001\u0000"+
		"\u0000\u0000\u00b5\u00b6\u0006\u001e\u0000\u0000\u00b6>\u0001\u0000\u0000"+
		"\u0000\u00b7\u00b9\u0007\u0005\u0000\u0000\u00b8\u00b7\u0001\u0000\u0000"+
		"\u0000\u00b9\u00ba\u0001\u0000\u0000\u0000\u00ba\u00b8\u0001\u0000\u0000"+
		"\u0000\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000"+
		"\u0000\u00bc\u00bd\u0006\u001f\u0000\u0000\u00bd@\u0001\u0000\u0000\u0000"+
		"\b\u0000\u008f\u0095\u00a0\u00a6\u00b0\u00b3\u00ba\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}